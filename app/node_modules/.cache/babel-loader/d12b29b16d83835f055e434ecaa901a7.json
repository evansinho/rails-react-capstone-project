{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\reactProjects\\\\findYourHouse\\\\app\\\\src\\\\components\\\\SignUpPage.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as houseActions from '../actions/houseActions';\nimport { withRouter, Link } from 'react-router-dom';\nimport signup from '../styles/SignUpPage.module.css';\nimport Alert from './Alert';\nimport Loader from './Loader';\n\nconst SignUpPage = ({\n  history,\n  type,\n  actions,\n  state\n}) => {\n  const [alert, setAlert] = useState(false);\n  const form = useRef(null);\n  useEffect(() => {\n    if (state.authenticated && (!localStorage.getItem(\"token\") || localStorage.getItem(\"token\") === 'undefined')) {\n      history.push('/list', state);\n      localStorage.setItem('token', state.authenticated);\n    } else if (localStorage.getItem(\"token\") && !state.authenticated) {\n      const token = localStorage.getItem(\"token\");\n      actions.fetchSubscription('http://localhost:3001/users/1', {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }, null, true);\n    } else if (state.authenticated) {\n      history.push('/list', state);\n    }\n  }, [state.authenticated]);\n\n  const handleSubmit = async () => {\n    actions.fetchSubscription('http://localhost:3001/auth/login', {\n      method: \"POST\",\n      body: `{\n        \"email\": \"sarah01@mail.com\",\n        \"password\": \"123abc\"\n      }`,\n      headers: {\n        \"Content-Length\": 57,\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      credentials: \"same-origin\"\n    }, 'SIGNIN');\n  };\n\n  const clickHandler = async e => {\n    e.preventDefault();\n    const formContent = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    };\n    [...form.current.elements].forEach(input => {\n      if (input.id === 'email') {\n        formContent.email = input.value;\n      } else if (input.id === 'password') {\n        formContent.password = input.value;\n      } else if (input.id === 'confirmPassword') {\n        formContent.passwordConfirmation = input.value;\n      }\n    });\n    console.log(formContent);\n    /*\n        let result = await handleSubmit();\n    \n        if (!result) {\n          console.log(result)\n        } else {\n          setAlert(false);\n          history.push('/list', state);\n        }\n    */\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    key: alert,\n    className: signup.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, alert ? /*#__PURE__*/React.createElement(Alert, {\n    message: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, `Sign ${type === 'IN' ? 'in' : 'up'}`), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, type === 'IN' ? 'Welcome back! Sign in and meet with your friends' : 'Hello there! Sign up and start meeting new friends')), state.loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    ref: form,\n    className: signup.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: signup.input,\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"your@mail.com\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: signup.input,\n    id: \"password\",\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), type === 'IN' ? null : /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: signup.input,\n    id: \"confirmPassword\",\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickHandler,\n    type: \"submit\",\n    className: \"btn btn--orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, type === 'IN' ? 'Sign in' : 'Sign up'), type === 'IN' ? /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign_up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 20\n    }\n  }, 'Sign up') : /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign_in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 20\n    }\n  }, 'Sign in')), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: signup.back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, '< Back'));\n};\n\nfunction mapStateToProps({\n  state\n}) {\n  return {\n    state: { ...state\n    }\n  };\n}\n\nfunction mapActionsToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...houseActions\n    }, dispatch)\n  };\n}\n\nSignUpPage.propTypes = {\n  type: PropTypes.string.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(SignUpPage));","map":{"version":3,"sources":["C:/Users/Usuario/reactProjects/findYourHouse/app/src/components/SignUpPage.js"],"names":["React","useEffect","useState","useRef","PropTypes","connect","bindActionCreators","houseActions","withRouter","Link","signup","Alert","Loader","SignUpPage","history","type","actions","state","alert","setAlert","form","authenticated","localStorage","getItem","push","setItem","token","fetchSubscription","headers","handleSubmit","method","body","credentials","clickHandler","e","preventDefault","formContent","email","password","passwordConfirmation","current","elements","forEach","input","id","value","console","log","main","loading","back","mapStateToProps","mapActionsToProps","dispatch","propTypes","string","isRequired","objectOf","any"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as houseActions from '../actions/houseActions';\nimport { withRouter, Link } from 'react-router-dom';\nimport signup from '../styles/SignUpPage.module.css';\nimport Alert from './Alert';\nimport Loader from './Loader';\n\nconst SignUpPage = ({ history, type, actions, state }) => {\n  const [alert, setAlert] = useState(false);\n\n  const form = useRef(null);\n\n  useEffect(() => {\n    if (state.authenticated &&\n      (!localStorage.getItem(\"token\") || localStorage.getItem(\"token\") === 'undefined')) {\n      history.push('/list', state);\n      localStorage.setItem('token', state.authenticated);\n    } else if (localStorage.getItem(\"token\") && !state.authenticated) {\n      const token = localStorage.getItem(\"token\");\n      actions.fetchSubscription('http://localhost:3001/users/1', {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }, null, true);\n    } else if (state.authenticated) {\n      history.push('/list', state);\n    }\n  }, [state.authenticated]);\n\n  const handleSubmit = async () => {\n    actions.fetchSubscription('http://localhost:3001/auth/login', {\n      method: \"POST\",\n      body: `{\n        \"email\": \"sarah01@mail.com\",\n        \"password\": \"123abc\"\n      }`,\n      headers: {\n        \"Content-Length\": 57,\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      credentials: \"same-origin\"\n    }, 'SIGNIN');\n  }\n\n  const clickHandler = async e => {\n    e.preventDefault();\n    const formContent = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n    };\n\n    [...form.current.elements].forEach(input => {\n      if (input.id === 'email') {\n        formContent.email = input.value;\n      } else if (input.id === 'password') {\n        formContent.password = input.value;\n      } else if (input.id === 'confirmPassword') {\n        formContent.passwordConfirmation = input.value;\n      }\n    });\n\n    console.log(formContent);\n/*\n    let result = await handleSubmit();\n\n    if (!result) {\n      console.log(result)\n    } else {\n      setAlert(false);\n      history.push('/list', state);\n    }\n*/    \n  };\n\n  return (\n    <main key={alert} className={signup.main}>\n      {\n        alert ? (<Alert message={alert} />) : null\n      }\n      <header>\n        <h1>{`Sign ${type === 'IN' ? 'in' : 'up'}`}</h1>\n        <small>\n          {type === 'IN' ? 'Welcome back! Sign in and meet with your friends' : 'Hello there! Sign up and start meeting new friends'}\n        </small>\n      </header>\n      {\n        state.loading\n          ? <Loader />\n          : (\n            <form ref={form} className={signup.form}>\n              <label htmlFor=\"email\">\n                <input className={signup.input} id=\"email\" type=\"email\" placeholder=\"your@mail.com\" required />\n              </label>\n              <label htmlFor=\"password\">\n                <input className={signup.input} id=\"password\" type=\"password\" required />\n              </label>\n              {type === 'IN' ? null : (\n                <label htmlFor=\"confirmPassword\">\n                  <input className={signup.input} id=\"confirmPassword\" type=\"password\" required />\n                </label>\n              )}\n              <button onClick={clickHandler} type=\"submit\" className=\"btn btn--orange\">\n                {type === 'IN' ? 'Sign in' : 'Sign up'}\n              </button>\n              {\n                type === 'IN'\n                ? (<Link to=\"/sign_up\">{'Sign up'}</Link>)\n                : (<Link to=\"/sign_in\">{'Sign in'}</Link>)\n              }\n            </form>\n          )\n      }\n      <Link to=\"/\" className={signup.back}>{'< Back'}</Link>\n    </main>\n  );\n};\n\nfunction mapStateToProps({ state }) {\n  return { state: { ...state } };\n}\n\nfunction mapActionsToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...houseActions }, dispatch),\n  };\n}\n\nSignUpPage.propTypes = {\n  type: PropTypes.string.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(SignUpPage));\n"]},"metadata":{},"sourceType":"module"}