{"ast":null,"code":"export const FETCH_SUBSCRIPTION_BEGIN = 'FETCH_SUBSCRIPTION_BEGIN';\nexport const FETCH_SUBSCRIPTION_SUCCESS = 'FETCH_SUBSCRIPTION_SUCCESS';\nexport const FETCH_SUBSCRIPTION_FAILURE = 'FETCH_SUBSCRIPTION_FAILURE';\nexport const AUTHENTICATION_SUCCESS = 'AUTHENTICATION_SUCCESS';\nexport const LOGOFF_SUCCESS = 'LOGOFF_SUCCESS';\n\nconst authenticationSuccess = payload => ({\n  type: AUTHENTICATION_SUCCESS,\n  payload\n});\n\nconst logoffSuccess = () => ({\n  type: LOGOFF_SUCCESS\n});\n\nconst fetchSubscriptionBegin = subscriptionId => ({\n  type: FETCH_SUBSCRIPTION_BEGIN,\n  subscriptionId\n});\n\nconst fetchSubscriptionSuccess = payload => ({\n  type: FETCH_SUBSCRIPTION_SUCCESS,\n  payload\n});\n\nconst fetchSubscriptionFailure = error => ({\n  type: FETCH_SUBSCRIPTION_FAILURE,\n  payload: error\n});\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(JSON.stringify(response));\n  }\n\n  return response;\n}\n\nfunction fetchSubscription(subscriptionEndpointUrl, options, auth, autoAuth) {\n  if (auth !== 'SIGNOUT') {\n    return dispatch => {\n      dispatch(fetchSubscriptionBegin(subscriptionEndpointUrl, options));\n      setTimeout(() => {\n        fetch(subscriptionEndpointUrl, options).then(handleErrors).then(res => res.json()).then(json => {\n          if (auth === 'SIGNIN') {\n            console.log(json);\n            dispatch(authenticationSuccess(json));\n          } else if (autoAuth) {\n            dispatch(authenticationSuccess({\n              auth_token: autoAuth,\n              user: json\n            }));\n          } else {\n            dispatch(fetchSubscriptionSuccess(json));\n          }\n        }).catch(error => {\n          dispatch(fetchSubscriptionFailure(`${error}`));\n        });\n      }, 2000);\n    };\n  } else {\n    console.log('ahhhhhhhhhhhh');\n    return dispatch => {\n      dispatch(logoffSuccess());\n    };\n  }\n}\n\nexport { fetchSubscription, fetchSubscriptionBegin, fetchSubscriptionSuccess, fetchSubscriptionFailure };","map":{"version":3,"sources":["C:/Users/Usuario/reactProjects/findYourHouse/app/src/actions/houseActions.js"],"names":["FETCH_SUBSCRIPTION_BEGIN","FETCH_SUBSCRIPTION_SUCCESS","FETCH_SUBSCRIPTION_FAILURE","AUTHENTICATION_SUCCESS","LOGOFF_SUCCESS","authenticationSuccess","payload","type","logoffSuccess","fetchSubscriptionBegin","subscriptionId","fetchSubscriptionSuccess","fetchSubscriptionFailure","error","handleErrors","response","ok","Error","JSON","stringify","fetchSubscription","subscriptionEndpointUrl","options","auth","autoAuth","dispatch","setTimeout","fetch","then","res","json","console","log","auth_token","user","catch"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;;AAEP,MAAMC,qBAAqB,GAAGC,OAAO,KAAK;AACxCC,EAAAA,IAAI,EAAEJ,sBADkC;AAExCG,EAAAA;AAFwC,CAAL,CAArC;;AAKA,MAAME,aAAa,GAAG,OAAO;AAC3BD,EAAAA,IAAI,EAAEH;AADqB,CAAP,CAAtB;;AAIA,MAAMK,sBAAsB,GAAGC,cAAc,KAAK;AAChDH,EAAAA,IAAI,EAAEP,wBAD0C;AAEhDU,EAAAA;AAFgD,CAAL,CAA7C;;AAKA,MAAMC,wBAAwB,GAAGL,OAAO,KAAK;AAC3CC,EAAAA,IAAI,EAAEN,0BADqC;AAE3CK,EAAAA;AAF2C,CAAL,CAAxC;;AAKA,MAAMM,wBAAwB,GAAGC,KAAK,KAAK;AACzCN,EAAAA,IAAI,EAAEL,0BADmC;AAEzCI,EAAAA,OAAO,EAAEO;AAFgC,CAAL,CAAtC;;AAKA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAAE,UAAMC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAD,CAAX;AAAwC;;AAC5D,SAAOA,QAAP;AACD;;AAED,SAASK,iBAAT,CAA2BC,uBAA3B,EAAoDC,OAApD,EAA6DC,IAA7D,EAAmEC,QAAnE,EAA6E;AAC3E,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,WAAOE,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAAChB,sBAAsB,CAACY,uBAAD,EAA0BC,OAA1B,CAAvB,CAAR;AAEAI,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACN,uBAAD,EAA0BC,OAA1B,CAAL,CACCM,IADD,CACMd,YADN,EACoBc,IADpB,CACyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhC,EAC4CF,IAD5C,CACiDE,IAAI,IAAI;AACvD,cAAIP,IAAI,KAAK,QAAb,EAAuB;AACrBQ,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,YAAAA,QAAQ,CAACpB,qBAAqB,CAACyB,IAAD,CAAtB,CAAR;AACD,WAHD,MAGO,IAAIN,QAAJ,EAAc;AACnBC,YAAAA,QAAQ,CAACpB,qBAAqB,CAAC;AAAE4B,cAAAA,UAAU,EAAET,QAAd;AAAwBU,cAAAA,IAAI,EAAEJ;AAA9B,aAAD,CAAtB,CAAR;AACD,WAFM,MAEA;AACLL,YAAAA,QAAQ,CAACd,wBAAwB,CAACmB,IAAD,CAAzB,CAAR;AACD;AACF,SAVD,EAWCK,KAXD,CAWOtB,KAAK,IAAI;AACdY,UAAAA,QAAQ,CAACb,wBAAwB,CAAE,GAAEC,KAAM,EAAV,CAAzB,CAAR;AACD,SAbD;AAcD,OAfS,EAeP,IAfO,CAAV;AAgBD,KAnBD;AAoBD,GArBD,MAqBO;AACLkB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WAAOP,QAAQ,IAAI;AAAEA,MAAAA,QAAQ,CAACjB,aAAa,EAAd,CAAR;AAA2B,KAAhD;AACD;AACF;;AAED,SACEY,iBADF,EAEEX,sBAFF,EAGEE,wBAHF,EAIEC,wBAJF","sourcesContent":["export const FETCH_SUBSCRIPTION_BEGIN = 'FETCH_SUBSCRIPTION_BEGIN';\nexport const FETCH_SUBSCRIPTION_SUCCESS = 'FETCH_SUBSCRIPTION_SUCCESS';\nexport const FETCH_SUBSCRIPTION_FAILURE = 'FETCH_SUBSCRIPTION_FAILURE';\nexport const AUTHENTICATION_SUCCESS = 'AUTHENTICATION_SUCCESS';\nexport const LOGOFF_SUCCESS = 'LOGOFF_SUCCESS';\n\nconst authenticationSuccess = payload => ({\n  type: AUTHENTICATION_SUCCESS,\n  payload,\n});\n\nconst logoffSuccess = () => ({\n  type: LOGOFF_SUCCESS,\n});\n\nconst fetchSubscriptionBegin = subscriptionId => ({\n  type: FETCH_SUBSCRIPTION_BEGIN,\n  subscriptionId,\n});\n\nconst fetchSubscriptionSuccess = payload => ({\n  type: FETCH_SUBSCRIPTION_SUCCESS,\n  payload,\n});\n\nconst fetchSubscriptionFailure = error => ({\n  type: FETCH_SUBSCRIPTION_FAILURE,\n  payload: error,\n});\n\nfunction handleErrors(response) {\n  if (!response.ok) { throw Error(JSON.stringify(response)); }\n  return response;\n}\n\nfunction fetchSubscription(subscriptionEndpointUrl, options, auth, autoAuth) {\n  if (auth !== 'SIGNOUT') {\n    return dispatch => {\n      dispatch(fetchSubscriptionBegin(subscriptionEndpointUrl, options));\n  \n      setTimeout(() => {\n        fetch(subscriptionEndpointUrl, options)\n        .then(handleErrors).then(res => res.json()).then(json => {\n          if (auth === 'SIGNIN') {\n            console.log(json)\n            dispatch(authenticationSuccess(json));\n          } else if (autoAuth) {\n            dispatch(authenticationSuccess({ auth_token: autoAuth, user: json}));\n          } else {\n            dispatch(fetchSubscriptionSuccess(json));\n          }\n        })\n        .catch(error => {\n          dispatch(fetchSubscriptionFailure(`${error}`));\n        })\n      }, 2000);\n    };\n  } else {\n    console.log('ahhhhhhhhhhhh')\n    return dispatch => { dispatch(logoffSuccess()) };\n  }\n}\n\nexport {\n  fetchSubscription,\n  fetchSubscriptionBegin,\n  fetchSubscriptionSuccess,\n  fetchSubscriptionFailure,\n};\n"]},"metadata":{},"sourceType":"module"}