{"ast":null,"code":"export var FETCH_SUBSCRIPTION_BEGIN='FETCH_SUBSCRIPTION_BEGIN';export var FETCH_SUBSCRIPTION_SUCCESS='FETCH_SUBSCRIPTION_SUCCESS';export var FETCH_SUBSCRIPTION_FAILURE='FETCH_SUBSCRIPTION_FAILURE';export var AUTHENTICATION_SUCCESS='AUTHENTICATION_SUCCESS';export var LOGOFF_SUCCESS='LOGOFF_SUCCESS';var authenticationSuccess=function authenticationSuccess(payload){return{type:AUTHENTICATION_SUCCESS,payload:payload};};var logoffSuccess=function logoffSuccess(){return{type:LOGOFF_SUCCESS};};var fetchSubscriptionBegin=function fetchSubscriptionBegin(subscriptionId){return{type:FETCH_SUBSCRIPTION_BEGIN,subscriptionId:subscriptionId};};var fetchSubscriptionSuccess=function fetchSubscriptionSuccess(payload){return{type:FETCH_SUBSCRIPTION_SUCCESS,payload:payload};};var fetchSubscriptionFailure=function fetchSubscriptionFailure(error){return{type:FETCH_SUBSCRIPTION_FAILURE,payload:error};};function handleErrors(response){if(!response.ok){throw Error(JSON.stringify(response));}return response;}function fetchSubscription(subscriptionEndpointUrl,options,auth,autoAuth){if(auth!=='SIGNOUT'){return function(dispatch){dispatch(fetchSubscriptionBegin(subscriptionEndpointUrl,options));setTimeout(function(){fetch(subscriptionEndpointUrl,options).then(handleErrors).then(function(res){return res.json();}).then(function(json){if(auth==='SIGNIN'){dispatch(authenticationSuccess(json));}else if(autoAuth){dispatch(authenticationSuccess({auth_token:autoAuth,user:json}));}else{dispatch(fetchSubscriptionSuccess(json));}}).catch(function(error){dispatch(fetchSubscriptionFailure(\"\".concat(error)));});},2000);};}else{return function(dispatch){dispatch(logoffSuccess());};}}export{fetchSubscription,fetchSubscriptionBegin,fetchSubscriptionSuccess,fetchSubscriptionFailure};","map":{"version":3,"sources":["C:/Users/Usuario/reactProjects/findYourHouse/app/src/actions/houseActions.js"],"names":["FETCH_SUBSCRIPTION_BEGIN","FETCH_SUBSCRIPTION_SUCCESS","FETCH_SUBSCRIPTION_FAILURE","AUTHENTICATION_SUCCESS","LOGOFF_SUCCESS","authenticationSuccess","payload","type","logoffSuccess","fetchSubscriptionBegin","subscriptionId","fetchSubscriptionSuccess","fetchSubscriptionFailure","error","handleErrors","response","ok","Error","JSON","stringify","fetchSubscription","subscriptionEndpointUrl","options","auth","autoAuth","dispatch","setTimeout","fetch","then","res","json","auth_token","user","catch"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,wBAAwB,CAAG,0BAAjC,CACP,MAAO,IAAMC,CAAAA,0BAA0B,CAAG,4BAAnC,CACP,MAAO,IAAMC,CAAAA,0BAA0B,CAAG,4BAAnC,CACP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,wBAA/B,CACP,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAEP,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAC,OAAO,QAAK,CACxCC,IAAI,CAAEJ,sBADkC,CAExCG,OAAO,CAAPA,OAFwC,CAAL,EAArC,CAKA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAO,CAC3BD,IAAI,CAAEH,cADqB,CAAP,EAAtB,CAIA,GAAMK,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,cAAc,QAAK,CAChDH,IAAI,CAAEP,wBAD0C,CAEhDU,cAAc,CAAdA,cAFgD,CAAL,EAA7C,CAKA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAAL,OAAO,QAAK,CAC3CC,IAAI,CAAEN,0BADqC,CAE3CK,OAAO,CAAPA,OAF2C,CAAL,EAAxC,CAKA,GAAMM,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAAAC,KAAK,CAAI,CACxC,MAAQ,CACRN,IAAI,CAAEL,0BADE,CAERI,OAAO,CAAEO,KAFD,CAAR,CAGC,CAJH,CAMA,QAASC,CAAAA,YAAT,CAAsBC,QAAtB,CAAgC,CAC9B,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CAAE,KAAMC,CAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAD,CAAX,CAAwC,CAC5D,MAAOA,CAAAA,QAAP,CACD,CAED,QAASK,CAAAA,iBAAT,CAA2BC,uBAA3B,CAAoDC,OAApD,CAA6DC,IAA7D,CAAmEC,QAAnE,CAA6E,CAC3E,GAAID,IAAI,GAAK,SAAb,CAAwB,CACtB,MAAO,UAAAE,QAAQ,CAAI,CACjBA,QAAQ,CAAChB,sBAAsB,CAACY,uBAAD,CAA0BC,OAA1B,CAAvB,CAAR,CAEAI,UAAU,CAAC,UAAM,CACfC,KAAK,CAACN,uBAAD,CAA0BC,OAA1B,CAAL,CACCM,IADD,CACMd,YADN,EACoBc,IADpB,CACyB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAD5B,EAC4CF,IAD5C,CACiD,SAAAE,IAAI,CAAI,CACvD,GAAIP,IAAI,GAAK,QAAb,CAAuB,CACrBE,QAAQ,CAACpB,qBAAqB,CAACyB,IAAD,CAAtB,CAAR,CACD,CAFD,IAEO,IAAIN,QAAJ,CAAc,CACnBC,QAAQ,CAACpB,qBAAqB,CAAC,CAAE0B,UAAU,CAAEP,QAAd,CAAwBQ,IAAI,CAAEF,IAA9B,CAAD,CAAtB,CAAR,CACD,CAFM,IAEA,CACLL,QAAQ,CAACd,wBAAwB,CAACmB,IAAD,CAAzB,CAAR,CACD,CACF,CATD,EAUCG,KAVD,CAUO,SAAApB,KAAK,CAAI,CACdY,QAAQ,CAACb,wBAAwB,WAAIC,KAAJ,EAAzB,CAAR,CACD,CAZD,EAaD,CAdS,CAcP,IAdO,CAAV,CAeD,CAlBD,CAmBD,CApBD,IAoBO,CACL,MAAO,UAAAY,QAAQ,CAAI,CAAEA,QAAQ,CAACjB,aAAa,EAAd,CAAR,CAA2B,CAAhD,CACD,CACF,CAED,OACEY,iBADF,CAEEX,sBAFF,CAGEE,wBAHF,CAIEC,wBAJF","sourcesContent":["export const FETCH_SUBSCRIPTION_BEGIN = 'FETCH_SUBSCRIPTION_BEGIN';\nexport const FETCH_SUBSCRIPTION_SUCCESS = 'FETCH_SUBSCRIPTION_SUCCESS';\nexport const FETCH_SUBSCRIPTION_FAILURE = 'FETCH_SUBSCRIPTION_FAILURE';\nexport const AUTHENTICATION_SUCCESS = 'AUTHENTICATION_SUCCESS';\nexport const LOGOFF_SUCCESS = 'LOGOFF_SUCCESS';\n\nconst authenticationSuccess = payload => ({\n  type: AUTHENTICATION_SUCCESS,\n  payload,\n});\n\nconst logoffSuccess = () => ({\n  type: LOGOFF_SUCCESS,\n});\n\nconst fetchSubscriptionBegin = subscriptionId => ({\n  type: FETCH_SUBSCRIPTION_BEGIN,\n  subscriptionId,\n});\n\nconst fetchSubscriptionSuccess = payload => ({\n  type: FETCH_SUBSCRIPTION_SUCCESS,\n  payload,\n});\n\nconst fetchSubscriptionFailure = error => {\n  return ({\n  type: FETCH_SUBSCRIPTION_FAILURE,\n  payload: error,\n})};\n\nfunction handleErrors(response) {\n  if (!response.ok) { throw Error(JSON.stringify(response)); }\n  return response;\n}\n\nfunction fetchSubscription(subscriptionEndpointUrl, options, auth, autoAuth) {\n  if (auth !== 'SIGNOUT') {\n    return dispatch => {\n      dispatch(fetchSubscriptionBegin(subscriptionEndpointUrl, options));\n  \n      setTimeout(() => {\n        fetch(subscriptionEndpointUrl, options)\n        .then(handleErrors).then(res => res.json()).then(json => {\n          if (auth === 'SIGNIN') {\n            dispatch(authenticationSuccess(json));\n          } else if (autoAuth) {\n            dispatch(authenticationSuccess({ auth_token: autoAuth, user: json}));\n          } else {\n            dispatch(fetchSubscriptionSuccess(json));\n          }\n        })\n        .catch(error => {\n          dispatch(fetchSubscriptionFailure(`${error}`));\n        })\n      }, 2000);\n    };\n  } else {\n    return dispatch => { dispatch(logoffSuccess()) };\n  }\n}\n\nexport {\n  fetchSubscription,\n  fetchSubscriptionBegin,\n  fetchSubscriptionSuccess,\n  fetchSubscriptionFailure,\n};\n"]},"metadata":{},"sourceType":"module"}