{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\reactProjects\\\\findYourHouse\\\\app\\\\src\\\\components\\\\ConversationsList.js\";\nimport React from 'react';\nimport { ActionCable } from 'react-actioncable-provider';\nimport NewConversationForm from './NewConversationForm';\nimport MessagemsArea from './MessagemsArea';\nimport Cable from './Cable';\n\nclass ConversationsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      conversations: [],\n      activeConversation: null\n    };\n\n    this.componentDidMount = () => {\n      fetch(`https://aqueous-wildwood-18424.herokuapp.com/conversations`, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          \"Authorization\": `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      }).then(res => res.json()).then(conversations => this.setState({\n        conversations\n      }));\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        activeConversation: id\n      });\n    };\n\n    this.handleReceivedConversation = response => {\n      const {\n        conversation\n      } = response;\n      this.setState({\n        conversations: [...this.state.conversations, conversation]\n      });\n    };\n\n    this.handleReceivedMessagem = response => {\n      const {\n        messagem\n      } = response;\n      const conversations = [...this.state.conversations];\n      const conversation = conversations.find(conversation => conversation.id === messagem.conversation_id);\n      conversation.messagems = [...conversation.messagems, messagem];\n      this.setState({\n        conversations\n      });\n    };\n\n    this.render = () => {\n      const {\n        conversations,\n        activeConversation\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"conversationsList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ActionCable, {\n        channel: {\n          channel: 'ConversationsChannel'\n        },\n        onReceived: this.handleReceivedConversation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), this.state.conversations.length ? /*#__PURE__*/React.createElement(Cable, {\n        conversations: conversations,\n        handleReceivedMessagem: this.handleReceivedMessagem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }) : null, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"Conversations\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, mapConversations(conversations, this.handleClick)), /*#__PURE__*/React.createElement(NewConversationForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), activeConversation ? /*#__PURE__*/React.createElement(MessagemsArea, {\n        conversation: findActiveConversation(conversations, activeConversation),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }) : null);\n    };\n  }\n\n}\n\nexport default ConversationsList; // helpers\n\nconst findActiveConversation = (conversations, activeConversation) => {\n  return conversations.find(conversation => conversation.id === activeConversation);\n};\n\nconst mapConversations = (conversations, handleClick) => {\n  console.log(conversations);\n  return;\n  return conversations.map(conversation => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: conversation.id,\n      onClick: () => handleClick(conversation.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, conversation.title);\n  });\n};","map":{"version":3,"sources":["C:/Users/Usuario/reactProjects/findYourHouse/app/src/components/ConversationsList.js"],"names":["React","ActionCable","NewConversationForm","MessagemsArea","Cable","ConversationsList","Component","state","conversations","activeConversation","componentDidMount","fetch","method","headers","token","Accept","then","res","json","setState","handleClick","id","handleReceivedConversation","response","conversation","handleReceivedMessagem","messagem","find","conversation_id","messagems","render","channel","length","mapConversations","findActiveConversation","console","log","map","title"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { ActionCable } from 'react-actioncable-provider';\r\nimport NewConversationForm from './NewConversationForm';\r\nimport MessagemsArea from './MessagemsArea';\r\nimport Cable from './Cable';\r\n\r\nclass ConversationsList extends React.Component {\r\n  state = {\r\n    conversations: [],\r\n    activeConversation: null\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    fetch(`https://aqueous-wildwood-18424.herokuapp.com/conversations`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n        \"Authorization\": `Bearer ${token}`,\r\n        Accept: 'application/json',\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(conversations => this.setState({ conversations }));\r\n  };\r\n\r\n  handleClick = id => {\r\n    this.setState({ activeConversation: id });\r\n  };\r\n\r\n  handleReceivedConversation = response => {\r\n    const { conversation } = response;\r\n    this.setState({\r\n      conversations: [...this.state.conversations, conversation]\r\n    });\r\n  };\r\n\r\n  handleReceivedMessagem = response => {\r\n    const { messagem } = response;\r\n    const conversations = [...this.state.conversations];\r\n    const conversation = conversations.find(\r\n      conversation => conversation.id === messagem.conversation_id\r\n    );\r\n    conversation.messagems = [...conversation.messagems, messagem];\r\n    this.setState({ conversations });\r\n  };\r\n\r\n  render = () => {\r\n    const { conversations, activeConversation } = this.state;\r\n    return (\r\n      <div className=\"conversationsList\">\r\n        <ActionCable\r\n          channel={{ channel: 'ConversationsChannel' }}\r\n          onReceived={this.handleReceivedConversation}\r\n        />\r\n        {this.state.conversations.length ? (\r\n          <Cable\r\n            conversations={conversations}\r\n            handleReceivedMessagem={this.handleReceivedMessagem}\r\n          />\r\n        ) : null}\r\n        <h2>Conversations</h2>\r\n        <ul>{mapConversations(conversations, this.handleClick)}</ul>\r\n        <NewConversationForm />\r\n        {activeConversation ? (\r\n          <MessagemsArea\r\n            conversation={findActiveConversation(\r\n              conversations,\r\n              activeConversation\r\n            )}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default ConversationsList;\r\n\r\n// helpers\r\n\r\nconst findActiveConversation = (conversations, activeConversation) => {\r\n  return conversations.find(\r\n    conversation => conversation.id === activeConversation\r\n  );\r\n};\r\n\r\nconst mapConversations = (conversations, handleClick) => {\r\n  console.log(conversations)\r\n  return\r\n  return conversations.map(conversation => {\r\n    return (\r\n      <li key={conversation.id} onClick={() => handleClick(conversation.id)}>\r\n        {conversation.title}\r\n      </li>\r\n    );\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}