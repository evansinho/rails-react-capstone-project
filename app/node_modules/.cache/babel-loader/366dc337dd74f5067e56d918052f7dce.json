{"ast":null,"code":"export const FETCH_SUBSCRIPTION_BEGIN = 'FETCH_SUBSCRIPTION_BEGIN';\nexport const FETCH_SUBSCRIPTION_SUCCESS = 'FETCH_SUBSCRIPTION_SUCCESS';\nexport const FETCH_SUBSCRIPTION_FAILURE = 'FETCH_SUBSCRIPTION_FAILURE';\n\nconst fetchSubscriptionBegin = subscriptionId => ({\n  type: FETCH_SUBSCRIPTION_BEGIN,\n  subscriptionId\n});\n\nconst fetchSubscriptionSuccess = payload => ({\n  type: FETCH_SUBSCRIPTION_SUCCESS,\n  payload\n});\n\nconst fetchSubscriptionFailure = error => ({\n  type: FETCH_SUBSCRIPTION_FAILURE,\n  payload: error\n});\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(JSON.stringify(response));\n  }\n\n  return response;\n}\n\nfunction fetchSubscription(subscriptionEndpointUrl, options, auth) {\n  return dispatch => {\n    dispatch(fetchSubscriptionBegin(subscriptionEndpointUrl, options));\n    setTimeout(() => {\n      fetch(subscriptionEndpointUrl, options).then(handleErrors).then(res => res.json()).then(json => {\n        if (auth) {\n          dispatch(authenticationSuccess(json));\n        } else {\n          dispatch(fetchSubscriptionSuccess(json));\n        }\n      }).catch(error => {\n        dispatch(fetchSubscriptionFailure(`${error}`));\n      });\n    }, 2000);\n  };\n}\n\nexport { fetchSubscription, fetchSubscriptionBegin, fetchSubscriptionSuccess, fetchSubscriptionFailure };","map":{"version":3,"sources":["C:/Users/Usuario/reactProjects/findYourHouse/app/src/actions/houseActions.js"],"names":["FETCH_SUBSCRIPTION_BEGIN","FETCH_SUBSCRIPTION_SUCCESS","FETCH_SUBSCRIPTION_FAILURE","fetchSubscriptionBegin","subscriptionId","type","fetchSubscriptionSuccess","payload","fetchSubscriptionFailure","error","handleErrors","response","ok","Error","JSON","stringify","fetchSubscription","subscriptionEndpointUrl","options","auth","dispatch","setTimeout","fetch","then","res","json","authenticationSuccess","catch"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;;AAEP,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AAChDC,EAAAA,IAAI,EAAEL,wBAD0C;AAEhDI,EAAAA;AAFgD,CAAL,CAA7C;;AAKA,MAAME,wBAAwB,GAAGC,OAAO,KAAK;AAC3CF,EAAAA,IAAI,EAAEJ,0BADqC;AAE3CM,EAAAA;AAF2C,CAAL,CAAxC;;AAKA,MAAMC,wBAAwB,GAAGC,KAAK,KAAK;AACzCJ,EAAAA,IAAI,EAAEH,0BADmC;AAEzCK,EAAAA,OAAO,EAAEE;AAFgC,CAAL,CAAtC;;AAKA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAAE,UAAMC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAD,CAAX;AAAwC;;AAC5D,SAAOA,QAAP;AACD;;AAED,SAASK,iBAAT,CAA2BC,uBAA3B,EAAoDC,OAApD,EAA6DC,IAA7D,EAAmE;AACjE,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACjB,sBAAsB,CAACc,uBAAD,EAA0BC,OAA1B,CAAvB,CAAR;AAEAG,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACL,uBAAD,EAA0BC,OAA1B,CAAL,CACCK,IADD,CACMb,YADN,EACoBa,IADpB,CACyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhC,EAC4CF,IAD5C,CACiDE,IAAI,IAAI;AACvD,YAAIN,IAAJ,EAAU;AACRC,UAAAA,QAAQ,CAACM,qBAAqB,CAACD,IAAD,CAAtB,CAAR;AACD,SAFD,MAEO;AACLL,UAAAA,QAAQ,CAACd,wBAAwB,CAACmB,IAAD,CAAzB,CAAR;AACD;AACF,OAPD,EAQCE,KARD,CAQOlB,KAAK,IAAI;AACdW,QAAAA,QAAQ,CAACZ,wBAAwB,CAAE,GAAEC,KAAM,EAAV,CAAzB,CAAR;AACD,OAVD;AAWD,KAZS,EAYP,IAZO,CAAV;AAaD,GAhBD;AAiBD;;AAED,SACEO,iBADF,EAEEb,sBAFF,EAGEG,wBAHF,EAIEE,wBAJF","sourcesContent":["export const FETCH_SUBSCRIPTION_BEGIN = 'FETCH_SUBSCRIPTION_BEGIN';\nexport const FETCH_SUBSCRIPTION_SUCCESS = 'FETCH_SUBSCRIPTION_SUCCESS';\nexport const FETCH_SUBSCRIPTION_FAILURE = 'FETCH_SUBSCRIPTION_FAILURE';\n\nconst fetchSubscriptionBegin = subscriptionId => ({\n  type: FETCH_SUBSCRIPTION_BEGIN,\n  subscriptionId,\n});\n\nconst fetchSubscriptionSuccess = payload => ({\n  type: FETCH_SUBSCRIPTION_SUCCESS,\n  payload,\n});\n\nconst fetchSubscriptionFailure = error => ({\n  type: FETCH_SUBSCRIPTION_FAILURE,\n  payload: error,\n});\n\nfunction handleErrors(response) {\n  if (!response.ok) { throw Error(JSON.stringify(response)); }\n  return response;\n}\n\nfunction fetchSubscription(subscriptionEndpointUrl, options, auth) {\n  return dispatch => {\n    dispatch(fetchSubscriptionBegin(subscriptionEndpointUrl, options));\n\n    setTimeout(() => {\n      fetch(subscriptionEndpointUrl, options)\n      .then(handleErrors).then(res => res.json()).then(json => {\n        if (auth) {\n          dispatch(authenticationSuccess(json));\n        } else {\n          dispatch(fetchSubscriptionSuccess(json));\n        }\n      })\n      .catch(error => {\n        dispatch(fetchSubscriptionFailure(`${error}`));\n      })\n    }, 2000);\n  };\n}\n\nexport {\n  fetchSubscription,\n  fetchSubscriptionBegin,\n  fetchSubscriptionSuccess,\n  fetchSubscriptionFailure,\n};\n"]},"metadata":{},"sourceType":"module"}